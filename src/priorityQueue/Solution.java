/*
package priorityQueue;

import java.util.*;

public class Solution {

  public static int solve(ArrayList<ArrayList<Integer>> A) {

    PairMaxSum minX = new PairMaxSum(Integer.MAX_VALUE, Integer.MAX_VALUE);
    PairMaxSum minY = new PairMaxSum(Integer.MAX_VALUE, Integer.MAX_VALUE);

    // Find the meeting point with minimum x-coordinate for you
    // and minimum y-coordinate for your friend in a single traversal
    for (List<Integer> point : A) {
      int x = point.get(0);
      int y = point.get(1);

      if (x <= minX.x) {
        if (x == minX.x) {
          minX.y = Math.min(y, minX.y);
        } else {
          minX.x = x;
          minX.y = y;
        }
      }

      if (y <= minY.y) {
        if (y == minY.y) {
          minY.x = Math.min(minY.x, x);
        } else {
          minY.y = y;
          minY.x = x;

        }
      }
    }

    // Calculate Manhattan distance between the meeting points
    int distXForYou = Math.abs(minX.x - minY.x);
    int distYForYou = Math.abs(minX.y - minY.y);

    return distXForYou + distYForYou;


  }


  public static void main(String[] args) {



    */
/* int[][] nums = new int[][]{{4, 163}, {57, 241}, {166, 214}, {218, 160}, {44, 65}, {173, 167},
        {22, 273}, {71, 275}, {191, 35}, {195, 164}, {31, 6}, {251, 293}, {253, 55}, {54, 118},
        {162, 51}, {69, 169}, {217, 79}, {278, 258}, {21, 176}, {276, 253}, {202, 179}, {260, 65},
        {295, 29}, {106, 36}, {81, 233}, {223, 233}, {7, 283}, {159, 13}, {16, 225}, {67, 128},
        {87, 144}, {255, 271}, {269, 246}, {299, 148}, {262, 23}, {265, 300}, {10, 193}, {33, 192},
        {73, 71}, {72, 180}, {101, 171}, {128, 219}, {85, 251}, {120, 47}, {155, 271}, {38, 100},
        {278, 39}, {33, 51}, {216, 240}, {62, 188}, {68, 151}, {83, 288}, {241, 138}, {5, 190},
        {249, 172}, {269, 220}, {132, 254}, {80, 122}, {173, 8}, {255, 20}, {62, 32}, {167, 281},
        {203, 39}, {142, 136}, {22, 11}, {107, 40}, {300, 267}, {168, 231}, {286, 232}, {157, 248},
        {208, 106}, {296, 106}, {67, 186}, {284, 97}, {9, 172}, {87, 29}, {273, 133}, {225, 265},
        {169, 124}, {267, 48}, {104, 194}, {83, 295}, {166, 267}, {256, 245}, {277, 29}, {263, 296},
        {165, 203}, {289, 35}, {124, 77}, {21, 22}, {65, 184}, {15, 75}, {221, 114}, {168, 299},
        {272, 255}, {114, 78}, {79, 284}, {272, 263}, {193, 190}, {129, 234}, {203, 146},
        {123, 177}, {205, 105}, {162, 254}, {141, 93}, {31, 279}, {163, 230}, {10, 95}, {10, 187},
        {199, 46}, {254, 70}, {92, 274}, {186, 66}, {298, 259}, {206, 297}, {136, 294}, {25, 201},
        {69, 252}, {262, 265}, {23, 217}, {110, 38}, {248, 154}, {207, 272}, {15, 169}, {53, 37},
        {112, 110}, {41, 5}, {262, 138}, {203, 218}, {288, 103}, {35, 216}, {57, 132}, {271, 210},
        {158, 278}, {216, 108}, {76, 267}, {153, 43}, {173, 84}, {109, 207}, {243, 45}, {175, 42},
        {96, 159}, {34, 255}, {300, 114}, {112, 99}, {21, 89}, {243, 49}, {285, 297}, {71, 119},
        {188, 195}, {113, 195}, {28, 1}, {42, 236}, {159, 200}, {181, 235}, {188, 209}, {50, 83},
        {12, 233}, {39, 203}, {141, 180}, {269, 37}, {183, 180}, {126, 210}, {5, 126}, {111, 20},
        {131, 230}, {39, 68}, {233, 201}, {256, 158}, {130, 41}, {161, 108}, {86, 76}, {265, 207},
        {262, 288}, {39, 232}, {295, 252}, {228, 3}, {80, 89}, {15, 126}, {208, 9}, {181, 84},
        {101, 103}, {294, 52}, {266, 252}, {71, 266}, {161, 239}, {52, 130}, {77, 272}, {184, 130},
        {181, 264}, {263, 28}, {253, 269}, {283, 195}, {257, 233}, {186, 225}, {256, 263},
        {125, 138}, {129, 115}, {224, 238}, {60, 94}, {133, 61}, {37, 28}, {285, 273}, {290, 12},
        {131, 208}, {139, 233}, {145, 227}, {63, 189}, {105, 84}, {255, 52}, {213, 257}, {78, 268},
        {210, 209}, {118, 172}, {69, 295}, {184, 270}, {91, 179}, {147, 206}, {29, 213}, {181, 207},
        {112, 37}, {185, 119}, {251, 157}, {45, 46}, {282, 14}, {149, 106}, {265, 271}, {60, 189},
        {137, 3}, {172, 59}, {164, 128}, {57, 193}, {44, 76}, {138, 132}, {144, 291}, {55, 113},
        {9, 293}, {218, 23}, {111, 32}, {139, 231}, {234, 286}, {199, 300}, {113, 265}, {108, 64},
        {201, 51}, {278, 59}, {207, 127}, {111, 177}, {289, 242}, {88, 41}, {56, 34}, {65, 112},
        {28, 299}, {225, 273}, {261, 80}, {119, 276}, {200, 125}, {255, 209}, {211, 124}, {13, 240},
        {1, 107}, {285, 237}, {244, 205}, {162, 46}, {258, 11}, {85, 148}, {41, 29}, {6, 279},
        {142, 65}, {33, 251}, {299, 263}, {188, 203}, {22, 124}, {240, 77}, {242, 64}, {298, 65},
        {286, 295}, {187, 71}, {33, 79}, {287, 54}, {267, 142}, {147, 284}, {208, 254}, {223, 294},
        {214, 114}, {177, 15}, {105, 12}, {79, 276}, {166, 65}, {223, 182}, {190, 264}, {99, 188},
        {38, 122}, {32, 178}, {287, 75}, {82, 181}, {91, 27}, {159, 265}, {245, 92}, {297, 84},
        {298, 268}, {185, 180}, {198, 228}, {261, 235}, {299, 171}, {198, 148}, {158, 261},
        {275, 183}, {220, 185}, {155, 182}, {116, 121}, {193, 231}, {221, 178}, {133, 191},
        {166, 240}, {156, 168}, {103, 261}, {248, 230}, {294, 113}, {265, 38}, {52, 94}, {45, 274},
        {104, 229}, {239, 1}, {270, 89}, {194, 2}, {186, 215}, {139, 52}, {79, 210}, {219, 127},
        {280, 73}, {252, 225}, {77, 12}, {237, 290}, {249, 141}, {120, 170}, {94, 115}, {215, 173},
        {139, 25}, {4, 260}, {5, 222}, {83, 241}, {173, 174}, {136, 61}, {260, 158}, {188, 116},
        {12, 211}, {255, 117}, {183, 285}, {63, 125}, {3, 299}, {227, 234}, {121, 4}, {108, 295},
        {234, 163}, {175, 14}, {142, 134}, {140, 154}, {33, 285}, {227, 212}, {299, 272}, {109, 24},
        {170, 94}, {230, 150}, {276, 98}, {213, 192}, {135, 257}, {90, 176}, {91, 154}, {290, 155},
        {143, 88}, {223, 162}, {182, 215}, {199, 198}, {152, 43}, {137, 147}, {229, 158}, {54, 48},
        {205, 78}, {298, 218}, {159, 74}, {178, 300}, {233, 166}, {243, 210}, {144, 226},
        {190, 135}, {295, 71}, {241, 88}, {264, 181}, {292, 127}, {84, 10}, {68, 208}, {192, 280},
        {279, 258}, {70, 84}, {11, 226}, {212, 67}, {148, 160}, {80, 29}, {218, 116}, {179, 299},
        {125, 93}, {1, 19}, {127, 6}, {287, 104}, {153, 276}, {221, 146}, {8, 235}, {75, 120},
        {229, 79}, {159, 278}, {252, 153}, {23, 220}, {73, 231}, {38, 273}, {253, 199}, {1, 299},
        {130, 66}, {242, 158}, {161, 79}, {169, 296}, {196, 72}, {201, 21}, {208, 30}, {73, 67},
        {130, 218}, {90, 234}, {282, 281}, {284, 13}, {250, 29}, {101, 288}, {54, 111}, {200, 100},
        {2, 261}, {55, 72}, {285, 198}, {78, 144}, {110, 267}, {201, 162}, {183, 76}, {272, 134},
        {45, 279}, {205, 240}, {232, 155}, {91, 237}, {20, 114}, {203, 208}, {68, 201}, {188, 216},
        {49, 206}, {151, 16}, {151, 112}, {224, 135}, {178, 259}, {33, 227}, {42, 12}, {181, 125},
        {42, 100}, {113, 93}, {17, 272}, {192, 15}, {55, 265}, {57, 86}, {100, 258}, {111, 126},
        {234, 277}, {52, 142}, {154, 296}, {111, 31}, {6, 56}, {272, 178}, {139, 21}, {82, 201},
        {129, 119}, {182, 160}, {194, 82}, {61, 199}, {163, 198}, {253, 260}};

    ArrayList<ArrayList<Integer>> ans = new ArrayList<>();

    for (int i = 0; i < nums.length; i++) {
      ArrayList<Integer> temp = new ArrayList<>();
      temp.add(nums[i][0]);
      temp.add(nums[i][1]);
      ans.add(temp);
    }

    System.out.println(solve(ans));*//*


  }


}

class Pair {

  int x;
  int y;

  public Pair(int x, int y) {
    this.x = x;
    this.y = y;
  }

}
*/
